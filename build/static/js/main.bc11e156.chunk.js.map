{"version":3,"sources":["Components/Register.js","Components/Home.js","Components/Question.js","Components/Answer.js","App.js","reportWebVitals.js","index.js"],"names":["Register","state","name","email","password","posts","componentDidMount","getApiPost","axios","get","then","response","data","setState","console","log","catch","handleChange","target","value","submit","event","preventDefault","payload","url","method","alert","resetUserInputs","displayApiPost","length","map","post","index","this","className","onSubmit","type","placeholder","id","onChange","to","React","Component","Home","Question","question","getBlogPost","displayBlogPost","Answer","answer","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc11e156.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {Link } from \"react-router-dom\";\r\nimport \"../App\"\r\n\r\nclass Register extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        posts: []\r\n      };\r\n    \r\n      componentDidMount = () => {\r\n        this.getApiPost();\r\n      };\r\n    \r\n    \r\n      getApiPost = () => {\r\n        axios.get('https://team-toyota-api.herokuapp.com/register')\r\n          .then((response) => {\r\n            const data = response.data;\r\n            this.setState({ posts: data });\r\n            console.log('Data has been received!!');\r\n          })\r\n          .catch(() => {\r\n          });\r\n      }\r\n    \r\n      handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value });\r\n      };\r\n    \r\n    \r\n      submit = (event) => {\r\n        event.preventDefault();\r\n    \r\n        const payload = {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n        };\r\n    \r\n    \r\n        axios({\r\n          url: 'https://team-toyota-api.herokuapp.com/register',\r\n          method: 'POST',\r\n          data: payload\r\n        })\r\n          .then(() => {\r\n            console.log('Data has been sent to the server');\r\n            alert(\"Data has been saved\")\r\n            this.resetUserInputs();\r\n            this.getApiPost();\r\n          })\r\n          .catch(() => {\r\n            console.log('Internal server error');\r\n            alert(\"Invalid input\")\r\n          });;\r\n      };\r\n    \r\n      resetUserInputs = () => {\r\n        this.setState({\r\n          name: '',\r\n          email: '',\r\n          password: ''\r\n        });\r\n      };\r\n    \r\n      displayApiPost = (posts) => {\r\n    console.log(\"clicked fetched\")\r\n        if (!posts.length) return null;\r\n    \r\n    \r\n        return posts.map((post, index) => (\r\n          <div key={index}>\r\n           <div>{post.name}</div>\r\n           <div> {post.email}</div>\r\n          </div>\r\n        ));\r\n      };\r\n    \r\n    render() {\r\n        console.log('State: ', this.state);\r\n        return (\r\n            <div className=\"app\">\r\n           \r\n            <form onSubmit={this.submit} className=\"box\" method=\"post\">\r\n             \r\n              <div className=\"form-input\">\r\n              <h2 className=\"head\" >Edu Toyota App</h2>\r\n              <label>Name\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"username\"\r\n                  id=\"namme\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange}\r\n                />\r\n                </label><br></br>\r\n                <label>Email\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"example@example.com\"\r\n                  id=\"emmail\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n                </label><br></br>\r\n                <label>Password\r\n                <input \r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"password\"\r\n                  id=\"pd\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                />\r\n                </label>\r\n              </div>\r\n         \r\n  <button className=\"button\">Submit</button>\r\n  <Link to=\"/home\"><small>Go to homepage</small></Link> \r\n            </form>\r\n           \r\n             {/* <div> {this.displayApiPost(this.state.posts)}\r\n             </div>  */}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;\r\n\r\n","import React from 'react'\r\nimport {Link } from \"react-router-dom\"\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h1>Team Toyota Welcomes You</h1>\r\n            <Link to=\"/question\">\r\n            <button id=\"btn\">What is your Question?</button>\r\n            </Link>\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nclass Question extends React.Component {\r\n\r\n    state = {\r\n        question: '',\r\n        posts: []\r\n      };\r\n    \r\n      componentDidMount = () => {\r\n        this.getBlogPost();\r\n      };\r\n    \r\n    \r\n      getBlogPost = () => {\r\n        axios.get('https://team-toyota-api.herokuapp.com/question')\r\n          .then((response) => {\r\n            const data = response.data;\r\n            this.setState({ posts: data });\r\n            console.log('Data has been received!!');\r\n          })\r\n          .catch(() => {\r\n            alert('Error retrieving data!!!');\r\n          });\r\n      }\r\n    \r\n      handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value });\r\n      };\r\n    \r\n    \r\n      submit = (event) => {\r\n        event.preventDefault();\r\n    \r\n        const payload = {\r\n        question: this.state.question\r\n        };\r\n    \r\n    \r\n        axios({\r\n          url: 'https://team-toyota-api.herokuapp.com/questionid',\r\n          method: 'POST',\r\n          data: payload\r\n        })\r\n          .then(() => {\r\n            console.log('Data has been sent to the server');\r\n            this.resetUserInputs();\r\n            this.getBlogPost();\r\n          })\r\n          .catch(() => {\r\n            console.log('Internal server error');\r\n            alert(\"Invalid input\")\r\n          });;\r\n      };\r\n    \r\n      resetUserInputs = () => {\r\n        this.setState({\r\n          question: ''\r\n        });\r\n      };\r\n    \r\n      displayBlogPost = (posts) => {\r\n    console.log(\"clicked fetched\")\r\n        if (!posts.length) return null;\r\n    \r\n    \r\n        return posts.map((post, index) => (\r\n          <div key={index}>\r\n            <p>{post.question}</p>\r\n          </div>\r\n        ));\r\n      };\r\n    \r\n    render() {\r\n        console.log('State: ', this.state);\r\n        return (\r\n            <div className=\"app\">\r\n            <h2>EDU TOYATA REACT APP</h2>\r\n            <form onSubmit={this.submit}>\r\n             \r\n              <div className=\"form-input\">\r\n              <label id =\"btn\">What is your Question?\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"question\"\r\n                  placeholder=\"\"\r\n                  id=\"qn\"\r\n                  value={this.state.question}\r\n                  onChange={this.handleChange}\r\n                />\r\n                </label>\r\n              </div>\r\n         \r\n    \r\n              <button id=\"btn\">Submit</button>\r\n              <Link to=\"/answer\"><button id=\"btn\">Go to answers</button></Link> <br></br>\r\n              Available Questions\r\n            </form>\r\n           \r\n             <div> {this.displayBlogPost(this.state.posts)}\r\n            \r\n             </div> \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question;\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Answer extends React.Component {\r\n\r\n    state = {\r\n        answer: '',\r\n        posts: []\r\n      };\r\n    \r\n      componentDidMount = () => {\r\n        this.getBlogPost();\r\n      };\r\n    \r\n    \r\n      getBlogPost = () => {\r\n        axios.get('https://team-toyota-api.herokuapp.com/answer')\r\n          .then((response) => {\r\n            const data = response.data;\r\n            this.setState({ posts: data });\r\n            console.log('Data has been received!!');\r\n          })\r\n          .catch(() => {\r\n            alert('Error retrieving data!!!');\r\n          });\r\n      }\r\n    \r\n      handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value });\r\n      };\r\n    \r\n    \r\n      submit = (event) => {\r\n        event.preventDefault();\r\n    \r\n        const payload = {\r\n          answer: this.state.answer\r\n        };\r\n    \r\n    \r\n        axios({\r\n          url: 'https://team-toyota-api.herokuapp.com/answer',\r\n          method: 'POST',\r\n          data: payload\r\n        })\r\n          .then(() => {\r\n            console.log('Data has been sent to the server');\r\n            this.resetUserInputs();\r\n            this.getBlogPost();\r\n          })\r\n          .catch(() => {\r\n            console.log('Internal server error');\r\n            alert(\"Invalid input\")\r\n          });;\r\n      };\r\n    \r\n      resetUserInputs = () => {\r\n        this.setState({\r\n          answer: ''\r\n        });\r\n      };\r\n    \r\n      displayBlogPost = (posts) => {\r\n    console.log(\"clicked fetched\")\r\n        if (!posts.length) return null;\r\n    \r\n    \r\n        return posts.map((post, index) => (\r\n          <div key={index}>\r\n            <p>{post.answer}</p>\r\n          </div>\r\n        ));\r\n      };\r\n    \r\n    render() {\r\n        console.log('State: ', this.state);\r\n        return (\r\n            <div className=\"app\">\r\n            <h2>EDU TOYATA REACT APP</h2>\r\n            <form onSubmit={this.submit}>\r\n             \r\n              <div className=\"form-input\">\r\n              <label>What is your Answer?\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"answer\"\r\n                  placeholder=\"\"\r\n                  id=\"qn\"\r\n                  value={this.state.answer}\r\n                  onChange={this.handleChange}\r\n                />\r\n                </label>\r\n              </div>\r\n         \r\n    \r\n              <button id=\"btn\">Submit</button><br></br>\r\n              Available Answers\r\n            </form>\r\n           \r\n             <div> {this.displayBlogPost(this.state.posts)}\r\n            \r\n             </div> \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Answer;\r\n\r\n","//import './App.css';\nimport './Style.css'\nimport Register from \"./Components/Register\"\nimport Home from \"./Components/Home\"\nimport Question from \"./Components/Question\"\nimport  Answer from \"./Components/Answer\"\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\n\nfunction App() {\n  return ( \n    <Router>\n    <div className=\"App\">\n      <switch>\n      <Route path=\"/\" exact component={Register} /> \n       <Route path=\"/home\" component={Home} /> \n       <Route path=\"/question\" component={Question} /> \n       <Route path=\"/answer\" component={Answer} /> \n    </switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}